<?php

$login = filter_var(trim($_POST['login']), FILTER_SANITIZE_STRING); // Записываем в переменную $login значение из окна ввода логина с приминением фильтров чтобы убрать возможные специальные символы которые формируется HTML например пробелы
$pass = filter_var(trim($_POST['pass']), FILTER_SANITIZE_STRING); // Записываем в переменную $pass значение из окна ввода пароля с приминением фильтров чтобы убрать возможные специальные символы которые формируется HTML например пробелы
$repass = filter_var(trim($_POST['repass']), FILTER_SANITIZE_STRING); // Записываем в переменную $repass значение из окна ввода подтверждения пароля с приминением фильтров чтобы убрать возможные специальные символы которые формируется HTML например пробелы

if (mb_strlen($login) < 5 || mb_strlen($login) > 90) { //Получаем длину строки $login и если она меньше 5 или больше 90 то выводим ошибку
    echo "Недопустимая длинна логина";
    exit();
} else if (mb_strlen($pass) < 4 || mb_strlen($pass) > 10) { //Получаем длину строки $pass и если она меньше 5 или больше 20 то выводим ошибку
    echo "Недопустимая длинна пароля (от 4 до 10)";
    exit();
} else if ($pass != $repass) { //Сравниваем значения $pass и $repass, если они разные то выводим ошибку
    echo "Пароли не совпадают";
    exit();
}
// Проверка логина и mail на идентичность
$mysql1 = new mysqli('localhost', 'root', 'root', 'login_form'); //Подключаемся к базе данных
$result = $mysql1->query("SELECT * FROM `users` WHERE login = '{$_REQUEST['login']}'"); // Выполняем запрос в базу данных где запрос SELECT вернет первую найденную строку из таблицы users где login равен введенному логину в форме

$user = []; // Создаем массив $user

if ($result->num_rows > 0) { //Если нашлись строки, которые мы получили из базы данных, то выполняется следующее
    while ($row = $result->fetch_assoc()) { //Пока выполняется (переменная $row равняется $result, где к $result применена функция fetch_assoc(), которая возвращает из $result ассоциативный массив, который более удобен для дальнейшей работы)
        // ассоциативный массив - массив состоящий из пар например [login] => login

        $user = $row; // Присваиваем массиву $user массив $row

        if ($user['login'] === $_REQUEST['login']) { //Если логин в полученном массиве $user равен введенному логину в форме то выводится ошибка
            echo "Пользователь с таким логином сущетвует";
            exit();
        }
    }
}

//Если в базе данных не хранится информации о введенном логине в форме, то

// Шифр пароля с помощью функции password_hash() где в качестве алгоритма используется PASSWORD_DEFAULT
$pass = password_hash($pass, PASSWORD_DEFAULT);
//Зарегистрировать
$mysql = new mysqli('localhost', 'root', 'root', 'login_form'); //Подключаемся к базе данных lab-1
$mysql->query("INSERT INTO `users` (`login`, `pass`) VALUES ('$login', '$pass')"); // INSERT (вставляем) INTO (в) таблицу users значения логина и пароля соответсвенно

$result = $mysql1->query("SELECT * FROM `users` WHERE login = '{$_REQUEST['login']}'"); // Выполняем запрос в базу данных где запрос SELECT вернет первую найденную строку из таблицы users где login равен введенному логину в форме
$row = $result->fetch_assoc(); //к $result применена функция fetch_assoc(), которая возвращает из $result ассоциативный массив
setcookie('user', $row['login'], time() + 3600, "/"); // Устанавливает куки которые будут переданы пользователю вместе с другими HTTP-заголовками
// первый параметр название куки
// второй параметр значение элемента login из массива $row
// третий параметр время жизни куки 3600 секунд  = 1 час
// четвертый параметр область действия куки (действует на всех страницах)

$mysql->close(); // Закрываем базу данных
header('Location: /loginform/login.php'); // Переадресация на ту же страницу


